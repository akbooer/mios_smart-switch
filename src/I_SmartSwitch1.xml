<?xml version="1.0"?>
<!-- 
 MiOS "Smart Switch" Plugin

 Copyright (C) 2012  Hugh Eaves

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<implementation>
	<settings>
		<protocol>raw</protocol>
	</settings>
	<functions>
	
		g_dkjson = require("L_SmartSwitch_dkjson")
		g_log = require("L_SmartSwitch_log")
		g_util = require("L_SmartSwitch_util")
		g_core = require("L_SmartSwitch_core")
		
		function initialize(lul_device)
			g_core.initialize(lul_device)
		end
	</functions>
	<startup>initialize</startup>
	<actionList>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitch1</serviceId>
			<name>AddSwitch</name>
			<run>
				return g_core.dispatchRun(lul_device, lul_settings,
				"urn:hugheaves-com:serviceId:SmartSwitch1", "AddSwitch")
			</run>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitch1</serviceId>
			<name>RemoveSwitch</name>
			<run>
				return g_core.dispatchRun(lul_device, lul_settings,
				"urn:hugheaves-com:serviceId:SmartSwitch1", "RemoveSwitch")
			</run>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetLevel</name>
			<run>
				return g_core.dispatchRun(lul_device, lul_settings,
				"urn:hugheaves-com:serviceId:SmartSwitchController1", "SetLevel")
			</run>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>AddSensor</name>
			<run>
				return g_core.dispatchRun(lul_device, lul_settings,
				"urn:hugheaves-com:serviceId:SmartSwitchController1", "AddSensor")
			</run>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>RemoveSensor</name>
			<run>
				return g_core.dispatchRun(lul_device, lul_settings,
				"urn:hugheaves-com:serviceId:SmartSwitchController1", "RemoveSensor")
			</run>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetOnLevel</name>
			<run>
				return g_core.dispatchRun(lul_device, lul_settings,
				"urn:hugheaves-com:serviceId:SmartSwitchController1", "SetOnLevel")
			</run>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetOffLevel</name>
			<run>
				return g_core.dispatchRun(lul_device, lul_settings,
				"urn:hugheaves-com:serviceId:SmartSwitchController1", "SetOffLevel")
			</run>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetAutoTimeout</name>
			<run>
				return g_core.dispatchRun(lul_device, lul_settings,
				"urn:hugheaves-com:serviceId:SmartSwitchController1", "SetAutoTimeout")
			</run>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetManualTimeout</name>
			<run>
				return g_core.dispatchRun(lul_device, lul_settings,
				"urn:hugheaves-com:serviceId:SmartSwitchController1", "SetManualTimeout")
			</run>
		</action>
	</actionList>
</implementation>