<?xml version="1.0"?>
<!-- MiOS "Smart Switch" Plugin Copyright (C) 2012 Hugh Eaves This program 
	is free software: you can redistribute it and/or modify it under the terms 
	of the GNU General Public License as published by the Free Software Foundation, 
	either version 3 of the License, or (at your option) any later version. This 
	program is distributed in the hope that it will be useful, but WITHOUT ANY 
	WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
	FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. 
	You should have received a copy of the GNU General Public License along with 
	this program. If not, see <http://www.gnu.org/licenses/>. -->
<implementation>
	<functions>
		g_pluginName = "SmartSwitch"
		g_core = require("L_" .. g_pluginName .. "_" .. "core")
		luup.log("SmartSwitch load")

		function smartswitch_initialize(lul_device)
			luup.log("SmartSwitch init")
			g_core.initialize(lul_device)
		end
	</functions>
	<startup>smartswitch_initialize</startup>
	<actionList>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitch1</serviceId>
			<name>AddSwitch</name>
			<job>
				g_core.dispatchRun(lul_device, lul_settings, "urn:hugheaves-com:serviceId:SmartSwitch1", "AddSwitch")
				return 4, nil
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitch1</serviceId>
			<name>RemoveSwitch</name>
			<job>
				g_core.dispatchRun(lul_device, lul_settings, "urn:hugheaves-com:serviceId:SmartSwitch1", "RemoveSwitch")
				return 4, nil
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetLevel</name>
			<job>
				g_core.dispatchRun(lul_device, lul_settings, "urn:hugheaves-com:serviceId:SmartSwitchController1", "SetLevel")
				return 4, nil
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>AddSensor</name>
			<job>
				g_core.dispatchRun(lul_device, lul_settings, "urn:hugheaves-com:serviceId:SmartSwitchController1", "AddSensor")
				return 4, nil
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>RemoveSensor</name>
			<job>
				g_core.dispatchRun(lul_device, lul_settings, "urn:hugheaves-com:serviceId:SmartSwitchController1", "RemoveSensor")
				return 4, nil
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetOnLevel</name>
			<job>
				g_core.dispatchRun(lul_device, lul_settings, "urn:hugheaves-com:serviceId:SmartSwitchController1", "SetOnLevel")
				return 4, nil
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetOffLevel</name>
			<job>
				g_core.dispatchRun(lul_device, lul_settings, "urn:hugheaves-com:serviceId:SmartSwitchController1", "SetOffLevel")
				return 4, nil
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetAutoTimeout</name>
			<job>
				g_core.dispatchRun(lul_device, lul_settings, "urn:hugheaves-com:serviceId:SmartSwitchController1", "SetAutoTimeout")
				return 4, nil
			</job>
		</action>
		<action>
			<serviceId>urn:hugheaves-com:serviceId:SmartSwitchController1</serviceId>
			<name>SetManualTimeout</name>
			<job>
				g_core.dispatchRun(lul_device, lul_settings, "urn:hugheaves-com:serviceId:SmartSwitchController1", "SetManualTimeout")
				return 4, nil
			</job>
		</action>
	</actionList>
</implementation>
